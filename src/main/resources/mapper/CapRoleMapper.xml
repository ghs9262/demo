<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.CapRoleMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.CapRole">
    <id column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="TENANT_ID" jdbcType="VARCHAR" property="tenantId" />
    <result column="ROLE_CODE" jdbcType="VARCHAR" property="roleCode" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="ROLE_DESC" jdbcType="VARCHAR" property="roleDesc" />
    <result column="CREATEUSER" jdbcType="VARCHAR" property="createuser" />
    <result column="CREATETIME" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">

    ROLE_ID, TENANT_ID, ROLE_CODE, ROLE_NAME, ROLE_DESC, CREATEUSER, CREATETIME
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CAP_ROLE
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from CAP_ROLE
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.CapRole">
    insert into CAP_ROLE (ROLE_ID, TENANT_ID, ROLE_CODE, 
      ROLE_NAME, ROLE_DESC, CREATEUSER, 
      CREATETIME)
    values (#{roleId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, 
      #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, #{createuser,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.CapRole">
    insert into CAP_ROLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="tenantId != null">
        TENANT_ID,
      </if>
      <if test="roleCode != null">
        ROLE_CODE,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
      <if test="roleDesc != null">
        ROLE_DESC,
      </if>
      <if test="createuser != null">
        CREATEUSER,
      </if>
      <if test="createtime != null">
        CREATETIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.CapRole">
    update CAP_ROLE
    <set>
      <if test="tenantId != null">
        TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="createuser != null">
        CREATEUSER = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.CapRole">
    update CAP_ROLE
    set TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      CREATEUSER = #{createuser,jdbcType=VARCHAR},
      CREATETIME = #{createtime,jdbcType=TIMESTAMP}
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>


</mapper>